[{"C:\\INCUBATOR\\social\\my-app\\src\\App.tsx":"1","C:\\INCUBATOR\\social\\my-app\\src\\components\\header\\header.tsx":"2","C:\\INCUBATOR\\social\\my-app\\src\\components\\header\\search\\search.tsx":"3","C:\\INCUBATOR\\social\\my-app\\src\\components\\profile\\my-posts\\post\\post.tsx":"4","C:\\INCUBATOR\\social\\my-app\\src\\components\\profile\\my-posts\\my-posts.tsx":"5","C:\\INCUBATOR\\social\\my-app\\src\\components\\dialogs\\dialogs.tsx":"6","C:\\INCUBATOR\\social\\my-app\\src\\index.tsx":"7","C:\\INCUBATOR\\social\\my-app\\src\\reportWebVitals.ts":"8","C:\\INCUBATOR\\social\\my-app\\src\\components\\dialogs\\people\\dialog-item\\dialogItem.tsx":"9","C:\\INCUBATOR\\social\\my-app\\src\\components\\dialogs\\people\\people.tsx":"10","C:\\INCUBATOR\\social\\my-app\\src\\components\\dialogs\\messages\\messageItem\\messageItem.tsx":"11","C:\\INCUBATOR\\social\\my-app\\src\\components\\profile\\profile-info\\profileInfo.tsx":"12","C:\\INCUBATOR\\social\\my-app\\src\\components\\dialogs\\messages\\messages.tsx":"13","C:\\INCUBATOR\\social\\my-app\\src\\components\\profile\\profile.tsx":"14","C:\\INCUBATOR\\social\\my-app\\src\\redux\\my-types.ts":"15","C:\\INCUBATOR\\social\\my-app\\src\\components\\profile\\my-posts\\post\\post.stories.tsx":"16","C:\\INCUBATOR\\social\\my-app\\src\\redux\\redux-store.ts":"17","C:\\INCUBATOR\\social\\my-app\\src\\components\\profile\\profile-container.tsx":"18","C:\\INCUBATOR\\social\\my-app\\src\\components\\users\\users.tsx":"19","C:\\INCUBATOR\\social\\my-app\\src\\components\\news\\news.tsx":"20","C:\\INCUBATOR\\social\\my-app\\src\\components\\music\\music.tsx":"21","C:\\INCUBATOR\\social\\my-app\\src\\components\\settings\\settings.tsx":"22","C:\\INCUBATOR\\social\\my-app\\src\\redux\\profile-reducer\\profile-reducer.ts":"23","C:\\INCUBATOR\\social\\my-app\\src\\redux\\dialogs-reducer\\dialogs-reducer.ts":"24","C:\\INCUBATOR\\social\\my-app\\src\\redux\\users-reducer\\users-reducer.ts":"25","C:\\INCUBATOR\\social\\my-app\\src\\redux\\auth\\auth-reducer.ts":"26","C:\\INCUBATOR\\social\\my-app\\src\\api\\api.ts":"27","C:\\INCUBATOR\\social\\my-app\\src\\components\\profile\\profile-info\\profile-status\\profileStatus.tsx":"28","C:\\INCUBATOR\\social\\my-app\\src\\components\\Login\\Login.tsx":"29","C:\\INCUBATOR\\social\\my-app\\src\\utils\\validators\\validators.ts":"30","C:\\INCUBATOR\\social\\my-app\\src\\components\\UI-kit\\textarea\\textareaForm.tsx":"31","C:\\INCUBATOR\\social\\my-app\\src\\components\\UI-kit\\input\\inputForm.tsx":"32","C:\\INCUBATOR\\social\\my-app\\src\\redux\\app-reducer\\app-reducer.ts":"33","C:\\INCUBATOR\\social\\my-app\\src\\components\\users\\user\\user.tsx":"34","C:\\INCUBATOR\\social\\my-app\\src\\components\\UI-kit\\preloader\\preloader.tsx":"35","C:\\INCUBATOR\\social\\my-app\\src\\components\\UI-kit\\navbar\\navbar.tsx":"36","C:\\INCUBATOR\\social\\my-app\\src\\components\\UI-kit\\paginator\\paginator.tsx":"37","C:\\INCUBATOR\\social\\my-app\\src\\utils\\hoc\\withSuspense.tsx":"38","C:\\INCUBATOR\\social\\my-app\\src\\components\\profile\\profile-info\\profile-data-form\\profileDataForm.tsx":"39"},{"size":2334,"mtime":1614608402071,"results":"40","hashOfConfig":"41"},{"size":1397,"mtime":1614617532935,"results":"42","hashOfConfig":"41"},{"size":410,"mtime":1613497570917,"results":"43","hashOfConfig":"41"},{"size":2357,"mtime":1614545026474,"results":"44","hashOfConfig":"41"},{"size":1958,"mtime":1613502477001,"results":"45","hashOfConfig":"41"},{"size":642,"mtime":1614537114952,"results":"46","hashOfConfig":"41"},{"size":609,"mtime":1610797124601,"results":"47","hashOfConfig":"41"},{"size":425,"mtime":1606762671954,"results":"48","hashOfConfig":"41"},{"size":619,"mtime":1614545190616,"results":"49","hashOfConfig":"41"},{"size":673,"mtime":1613505684591,"results":"50","hashOfConfig":"41"},{"size":294,"mtime":1610393908189,"results":"51","hashOfConfig":"41"},{"size":3802,"mtime":1614622601822,"results":"52","hashOfConfig":"41"},{"size":1909,"mtime":1613505684452,"results":"53","hashOfConfig":"41"},{"size":285,"mtime":1614556145682,"results":"54","hashOfConfig":"41"},{"size":3176,"mtime":1610360356760,"results":"55","hashOfConfig":"41"},{"size":584,"mtime":1609592213774,"results":"56","hashOfConfig":"57"},{"size":891,"mtime":1614554792755,"results":"58","hashOfConfig":"41"},{"size":1200,"mtime":1614607852521,"results":"59","hashOfConfig":"41"},{"size":2149,"mtime":1614545088531,"results":"60","hashOfConfig":"41"},{"size":176,"mtime":1610360357038,"results":"61","hashOfConfig":"41"},{"size":179,"mtime":1610360356672,"results":"62","hashOfConfig":"41"},{"size":188,"mtime":1610360356819,"results":"63","hashOfConfig":"41"},{"size":5208,"mtime":1614619857225,"results":"64","hashOfConfig":"41"},{"size":1423,"mtime":1612536908573,"results":"65","hashOfConfig":"41"},{"size":5111,"mtime":1613775164160,"results":"66","hashOfConfig":"41"},{"size":3109,"mtime":1614617533013,"results":"67","hashOfConfig":"41"},{"size":1846,"mtime":1614592955778,"results":"68","hashOfConfig":"41"},{"size":1785,"mtime":1614622840149,"results":"69","hashOfConfig":"41"},{"size":2742,"mtime":1614621465325,"results":"70","hashOfConfig":"41"},{"size":411,"mtime":1612433084178,"results":"71","hashOfConfig":"41"},{"size":528,"mtime":1612441851171,"results":"72","hashOfConfig":"41"},{"size":862,"mtime":1614621624467,"results":"73","hashOfConfig":"41"},{"size":1073,"mtime":1613567035636,"results":"74","hashOfConfig":"41"},{"size":2143,"mtime":1613513617869,"results":"75","hashOfConfig":"41"},{"size":253,"mtime":1614545379934,"results":"76","hashOfConfig":"41"},{"size":1226,"mtime":1613499589142,"results":"77","hashOfConfig":"41"},{"size":2299,"mtime":1614532004896,"results":"78","hashOfConfig":"41"},{"size":311,"mtime":1614538049774,"results":"79","hashOfConfig":"41"},{"size":2900,"mtime":1614624517363,"results":"80","hashOfConfig":"41"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1a0d3il",{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jzix7t",{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\INCUBATOR\\social\\my-app\\src\\App.tsx",["170"],"C:\\INCUBATOR\\social\\my-app\\src\\components\\header\\header.tsx",["171"],"import styles from \"./header.module.css\";\r\nimport {Search} from \"./search/search\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {GlobalStateType} from \"../../redux/redux-store\";\r\nimport {logoutTC} from \"../../redux/auth/auth-reducer\";\r\nimport logo from \"../../images/mainLogo.png\"\r\n\r\nexport const Header: React.FC = (props) => {\r\n\r\n    const isAuth = useSelector((state: GlobalStateType) => state.auth.isAuth);\r\n    const login = useSelector((state: GlobalStateType) => state.auth.login);\r\n    const dispatch = useDispatch();\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logoutTC());\r\n    }\r\n\r\n    return (\r\n        <header className={styles.header}>\r\n            <div className={styles.logo}>\r\n                <img className={styles.logo_img} src={logo} alt=\"mainLogo\"/>\r\n                <div className={styles.logo_text}>Mango Social</div>\r\n            </div>\r\n            <Search/>\r\n            <div className={styles.login}>\r\n                {\r\n                    isAuth\r\n                    ? <NavLink to={\"/profile\"}>\r\n                            {login}\r\n                            <div><a onClick={logoutHandler}>Logout</a></div>\r\n                    </NavLink>\r\n                    : <NavLink to={\"/login\"}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n};",["172","173"],"C:\\INCUBATOR\\social\\my-app\\src\\components\\header\\search\\search.tsx",[],"C:\\INCUBATOR\\social\\my-app\\src\\components\\profile\\my-posts\\post\\post.tsx",[],"C:\\INCUBATOR\\social\\my-app\\src\\components\\profile\\my-posts\\my-posts.tsx",[],"C:\\INCUBATOR\\social\\my-app\\src\\components\\dialogs\\dialogs.tsx",[],"C:\\INCUBATOR\\social\\my-app\\src\\index.tsx",[],"C:\\INCUBATOR\\social\\my-app\\src\\reportWebVitals.ts",[],"C:\\INCUBATOR\\social\\my-app\\src\\components\\dialogs\\people\\dialog-item\\dialogItem.tsx",[],"C:\\INCUBATOR\\social\\my-app\\src\\components\\dialogs\\people\\people.tsx",[],"C:\\INCUBATOR\\social\\my-app\\src\\components\\dialogs\\messages\\messageItem\\messageItem.tsx",["174"],"import React from 'react';\r\nimport styles from \"./messageItem.module.css\";\r\n\r\ntype MessagePropsType = {\r\n    id: string\r\n    message: string\r\n};\r\n\r\nexport const MessageItem: React.FC<MessagePropsType> = (props) => {\r\n\r\n    return (\r\n        <div id={props.id}>{props.message}</div>\r\n    )\r\n};\r\n","C:\\INCUBATOR\\social\\my-app\\src\\components\\profile\\profile-info\\profileInfo.tsx",[],"C:\\INCUBATOR\\social\\my-app\\src\\components\\dialogs\\messages\\messages.tsx",["175"],"import React from 'react';\r\nimport styles from \"./messages.module.css\";\r\nimport {MessageItem} from \"./messageItem/messageItem\";\r\nimport {MessagesDataType} from \"../../../redux/my-types\";\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {TextareaForm} from '../../auxiliary-components/textarea/textareaForm';\r\nimport {maxLength} from \"../../../utils/validators/validators\";\r\n\r\ntype MessagesPropsType = {\r\n    messagesData: Array<MessagesDataType>\r\n    addMessage: (text: string) => void\r\n};\r\n\r\nconst maxLength500 = maxLength(500);\r\n\r\nconst MessageForm: React.FC<InjectedFormProps> = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={styles.new_post_wrapper}>\r\n            <div>\r\n                <Field name={\"message\"}\r\n                       component={TextareaForm}\r\n                       className={styles.post_message}\r\n                       validate={maxLength500}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button className={styles.post_btn}>\r\n                    Send\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst MessageReduxForm = reduxForm({form: \"message\"})(MessageForm);\r\n\r\nexport const Messages: React.FC<MessagesPropsType> = (props) => {\r\n\r\n    const messagesArray = props.messagesData.map(i => <MessageItem id={i.id} message={i.message}/>);\r\n\r\n    const submitHandler = (data: { message?: string }) => {\r\n        if (data.message) props.addMessage(data.message.trim());\r\n    };\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.message}>\r\n                {messagesArray}\r\n            </div>\r\n            <MessageReduxForm onSubmit={submitHandler}/>\r\n        </div>\r\n    );\r\n};\r\n","C:\\INCUBATOR\\social\\my-app\\src\\components\\profile\\profile.tsx",[],"C:\\INCUBATOR\\social\\my-app\\src\\redux\\my-types.ts",[],["176","177"],"C:\\INCUBATOR\\social\\my-app\\src\\components\\profile\\my-posts\\post\\post.stories.tsx",[],"C:\\INCUBATOR\\social\\my-app\\src\\redux\\redux-store.ts",[],"C:\\INCUBATOR\\social\\my-app\\src\\components\\profile\\profile-container.tsx",["178"],"import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {GlobalStateType} from \"../../redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport {getUserProfile, getUserStatus, profileActions} from \"../../redux/profile-reducer/profile-reducer\";\r\nimport {Profile} from \"./profile\";\r\nimport {Redirect, RouteComponentProps, withRouter} from \"react-router-dom\";\r\n\r\nconst ProfileContainer: React.FC<RouteComponentProps<{ userId?: string }>> = (props) => {\r\n\r\n    const isAuth = useSelector((state: GlobalStateType) => state.auth.isAuth);\r\n    const authUserId = useSelector((state: GlobalStateType) => state.auth.userId);\r\n    const dispatch = useDispatch();\r\n\r\n    if (!props.match.params.userId) {\r\n        dispatch(profileActions.isOwner(true));\r\n    } else dispatch(profileActions.isOwner(false));\r\n\r\n    let userId: any = props.match.params.userId;\r\n\r\n    useEffect(() => {\r\n        if (!userId) userId = authUserId;\r\n        dispatch(getUserProfile(userId));\r\n        dispatch(getUserStatus(userId));\r\n    })\r\n\r\n    if (!isAuth) return <Redirect to={\"/login\"} />\r\n\r\n    return <Profile/>\r\n}\r\n\r\nexport default compose(withRouter)(ProfileContainer);\r\n\r\n","C:\\INCUBATOR\\social\\my-app\\src\\components\\users\\users.tsx",["179"],"import React, {useEffect} from 'react';\r\nimport styles from './users.module.css';\r\nimport {Preloader} from \"../UI-kit/preloader/preloader\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {GlobalStateType} from \"../../redux/redux-store\";\r\nimport {getUsersThunkCreator, usersActions} from \"../../redux/users-reducer/users-reducer\";\r\nimport {User} from \"./user/user\";\r\nimport Paginator from \"../UI-kit/paginator/paginator\";\r\nimport defaultAvatar from \"../../images/ava.jpg\";\r\n\r\nconst Users: React.FC = () => {\r\n\r\n    // Hooks\r\n    const {\r\n        users,\r\n        pageSize,\r\n        totalUsersCount,\r\n        currentPage,\r\n        isLoading\r\n    } = useSelector((state: GlobalStateType) => state.users);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    // Lifecycle\r\n    useEffect(() => {\r\n        dispatch(getUsersThunkCreator(currentPage, pageSize));\r\n        return () => {\r\n            dispatch(usersActions.setIsLoading(false));\r\n            dispatch(usersActions.setCurrentPage(1));\r\n        }\r\n    }, [dispatch])\r\n\r\n\r\n    // Map users items\r\n    const usersData = users\r\n        ? users.map(user => {\r\n\r\n            const photoUrl = user.photos.large || user.photos.small || defaultAvatar;\r\n\r\n            return (\r\n                isLoading\r\n                    ?\r\n                    <div className={styles.itemWrapper} key={user.id}>\r\n                        <Preloader/>\r\n                    </div>\r\n                    :\r\n                    <User id={user.id}\r\n                          photoUrl={photoUrl}\r\n                          name={user.name}\r\n                          status={user.status}\r\n                          followed={user.followed}\r\n                    />\r\n            );\r\n        })\r\n        : <Preloader/>;\r\n\r\n\r\n    // Render\r\n    return (\r\n        <>\r\n            <Paginator totalItemsCount={totalUsersCount}\r\n                       pageSize={pageSize}\r\n                       currentPage={currentPage}\r\n                       portionSize={15}\r\n            />\r\n\r\n            <div className={styles.wrapper}>\r\n                {usersData}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Users;","C:\\INCUBATOR\\social\\my-app\\src\\components\\news\\news.tsx",["180"],"import React from 'react';\r\nimport styles from \"./news.module.css\";\r\n\r\nexport const News = () => {\r\n\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n};\r\n","C:\\INCUBATOR\\social\\my-app\\src\\components\\music\\music.tsx",["181"],"import React from 'react';\r\nimport styles from \"./music.module.css\";\r\n\r\nexport const Music = () => {\r\n\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n};\r\n","C:\\INCUBATOR\\social\\my-app\\src\\components\\settings\\settings.tsx",["182"],"import React from 'react';\r\nimport styles from \"./settings.module.css\";\r\n\r\nexport const Settings = () => {\r\n\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n};\r\n","C:\\INCUBATOR\\social\\my-app\\src\\redux\\profile-reducer\\profile-reducer.ts",["183"],"C:\\INCUBATOR\\social\\my-app\\src\\redux\\dialogs-reducer\\dialogs-reducer.ts",["184"],"import {v1} from \"uuid\";\r\nimport {DialogsType, MessagesDataType} from \"../my-types\";\r\n\r\nconst initialState: DialogsType = {\r\n    peopleData: [\r\n        {name: \"Anna\", id: v1()},\r\n        {name: \"Andrey\", id: v1()},\r\n        {name: \"John\", id: v1()},\r\n        {name: \"Dima\", id: v1()},\r\n        {name: \"Lio\", id: v1()}\r\n    ],\r\n    messagesData: [\r\n        {id: v1(), message: \"Hi!\"},\r\n        {id: v1(), message: \"HELLO! How a u??\"},\r\n        {id: v1(), message: \"Great !! :))\"}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action: DialogsActionsType): DialogsType => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD_MESSAGE\":\r\n            if (action.text) {\r\n                const newMessage: MessagesDataType = {\r\n                    id: v1(),\r\n                    message: action.text\r\n                };\r\n                return {\r\n                    ...state,\r\n                    messagesData: [...state.messagesData, newMessage]\r\n                };\r\n            } else return state;\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\n// Actions object:\r\nexport const dialogsActions = {\r\n    addMessage: (text: string) => ({type: \"ADD_MESSAGE\", text} as const)\r\n};\r\n\r\n// Initial Global Type for Users reducer:\r\ntype PropertiesType<T> = T extends {[key: string]: infer U} ? U : any;\r\nexport type DialogsActionsType = ReturnType<PropertiesType<typeof dialogsActions>>;\r\n\r\n\r\nexport default dialogsReducer;\r\n","C:\\INCUBATOR\\social\\my-app\\src\\redux\\users-reducer\\users-reducer.ts",[],"C:\\INCUBATOR\\social\\my-app\\src\\redux\\auth\\auth-reducer.ts",[],"C:\\INCUBATOR\\social\\my-app\\src\\api\\api.ts",[],"C:\\INCUBATOR\\social\\my-app\\src\\components\\profile\\profile-info\\profile-status\\profileStatus.tsx",[],"C:\\INCUBATOR\\social\\my-app\\src\\components\\Login\\Login.tsx",[],"C:\\INCUBATOR\\social\\my-app\\src\\utils\\validators\\validators.ts",[],"C:\\INCUBATOR\\social\\my-app\\src\\components\\UI-kit\\textarea\\textareaForm.tsx",[],"C:\\INCUBATOR\\social\\my-app\\src\\components\\UI-kit\\input\\inputForm.tsx",[],"C:\\INCUBATOR\\social\\my-app\\src\\redux\\app-reducer\\app-reducer.ts",[],"C:\\INCUBATOR\\social\\my-app\\src\\components\\users\\user\\user.tsx",[],"C:\\INCUBATOR\\social\\my-app\\src\\components\\UI-kit\\preloader\\preloader.tsx",[],"C:\\INCUBATOR\\social\\my-app\\src\\components\\UI-kit\\navbar\\navbar.tsx",[],"C:\\INCUBATOR\\social\\my-app\\src\\components\\UI-kit\\paginator\\paginator.tsx",[],"C:\\INCUBATOR\\social\\my-app\\src\\utils\\hoc\\withSuspense.tsx",[],"C:\\INCUBATOR\\social\\my-app\\src\\components\\profile\\profile-info\\profile-data-form\\profileDataForm.tsx",[],{"ruleId":"185","severity":1,"message":"186","line":26,"column":11,"nodeType":"187","messageId":"188","endLine":26,"endColumn":17},{"ruleId":"189","severity":1,"message":"190","line":32,"column":34,"nodeType":"191","endLine":32,"endColumn":61},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"185","severity":1,"message":"196","line":2,"column":8,"nodeType":"187","messageId":"188","endLine":2,"endColumn":14},{"ruleId":"185","severity":1,"message":"197","line":7,"column":29,"nodeType":"187","messageId":"188","endLine":7,"endColumn":37},{"ruleId":"192","replacedBy":"198"},{"ruleId":"194","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":22,"column":31,"nodeType":"187","endLine":22,"endColumn":41},{"ruleId":"200","severity":1,"message":"202","line":31,"column":8,"nodeType":"203","endLine":31,"endColumn":18,"suggestions":"204"},{"ruleId":"185","severity":1,"message":"196","line":2,"column":8,"nodeType":"187","messageId":"188","endLine":2,"endColumn":14},{"ruleId":"185","severity":1,"message":"196","line":2,"column":8,"nodeType":"187","messageId":"188","endLine":2,"endColumn":14},{"ruleId":"185","severity":1,"message":"196","line":2,"column":8,"nodeType":"187","messageId":"188","endLine":2,"endColumn":14},{"ruleId":"205","severity":1,"message":"206","line":80,"column":20,"nodeType":"207","messageId":"208","endLine":86,"endColumn":14},{"ruleId":"185","severity":1,"message":"209","line":2,"column":9,"nodeType":"187","messageId":"188","endLine":2,"endColumn":19},"@typescript-eslint/no-unused-vars","'isAuth' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["210"],"no-negated-in-lhs",["211"],"'styles' is defined but never used.","'required' is defined but never used.",["210"],["211"],"react-hooks/exhaustive-deps","Assignments to the 'userId' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has missing dependencies: 'currentPage' and 'pageSize'. Either include them or remove the dependency array.","ArrayExpression",["212"],"@typescript-eslint/consistent-type-assertions","Use 'as ProfileType' instead of '<ProfileType>'.","TSTypeAssertion","as","'ActionType' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},"Update the dependencies array to be: [currentPage, dispatch, pageSize]",{"range":"215","text":"216"},[1018,1028],"[currentPage, dispatch, pageSize]"]